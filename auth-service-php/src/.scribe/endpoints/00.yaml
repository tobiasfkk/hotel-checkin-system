name: Autenticação
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Autenticação
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Registra um novo usuário.

        Registra um usuário com nome, email, senha e papel (admin ou normal).
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nome do usuário.'
        required: true
        example: 'João Silva'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Email único do usuário.'
        required: true
        example: joao@email.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Senha com no mínimo 6 caracteres.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'Papel do usuário. Valores válidos: admin, normal.'
        required: true
        example: normal
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'João Silva'
      email: joao@email.com
      password: secret123
      role: normal
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Usuário criado com sucesso"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "email": ["The email has already been taken."]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Autenticação
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Realiza o login do usuário.

        Retorna token JWT para autenticação nas demais rotas.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email do usuário.'
        required: true
        example: joao@email.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Senha do usuário.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: joao@email.com
      password: secret123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
            "token_type": "bearer",
            "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Credenciais inválidas"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/validate
    metadata:
      groupName: Autenticação
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Valida o token de autenticação do usuário.

        Verifica se o token JWT está válido e se o usuário tem permissão.
      description: ''
      authenticated: false
      custom: []
    headers:
      X-Original-Method: 'string Método HTTP original da requisição. Example: GET'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '- Sem conteúdo, token válido.'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Usuário não encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Acesso negado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Exception"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
